noun := head.
verb := head &
  [ TAM tam,
    VFORM vform ].
det := head.

vform := avm.
bse := vform.
fin := vform.
psp := vform.
prp := vform.

progr := aspect.
no-aspect := aspect.
present := tense.
past := tense.

png-full := png &
  [ PN pernum ].
pernum := sort.
1or3sg := pernum.
non3sg := pernum.
non1sg := non3sg.
2per := non1sg.
1or3pl := non1sg.
1per := 1or3sg & non3sg.
1per+non1sg := 1per & non1sg.
1sg := 1per.
1pl := 1or3pl.
2sg := 2per.
2pl := 2per.
3pl := 1or3pl.
3sg := 1or3sg.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 
; Noun types

noun-word := word &
  [ INFLECTED -,
    SYNSEM [ LOCAL [ CAT [ HEAD noun,
                           VAL [ SPR < [ LOCAL [ CAT.HEAD det,
                                                 CONT.HOOK.INDEX #ind ] ] >,
                                 COMPS < > ] ],
                     CONT [ HOOK.INDEX #ind,
                            RELS <! #key !> ],
                     KEYS.KEY #key & [ ARG0 #ind ] ],
             NON-LOCAL non-local-none ] ].

pn-word := noun-word &
  [ SYNSEM.LOCAL.KEYS.KEY named-rel ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 
; Verb types

verb-word := word &
  [ INFLECTED -,
    SYNSEM [ LOCAL [ CAT [ HEAD verb,
                           VAL [ SUBJ < [ LOCAL [ CAT [ HEAD noun,
                                                        VAL [ SPR < >,
                                                              COMPS < > ] ],
                                                  CONT.HOOK.INDEX #ind ] ] >,
                                 SPR < > ] ],
                     CONT [ HOOK [ INDEX #event,
                                   XARG #ind ],
                            RELS <! #key !> ],
                     KEYS.KEY #key & [ ARG0 #event,
                                       ARG1 #ind ] ],
             NON-LOCAL [ REL 0-dlist,
                         QUE 0-dlist ] ] ].

intr-verb := verb-word &
  [ SYNSEm [ LOCAL.CAT.VAL [ SUBJ < [ NON-LOCAL.SLASH #slash ] >,
                             COMPS < > ],

             NON-LOCAL.SLASH #slash ] ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Determiner words

det-word := word &
  [ SYNSEM.LOCAL [ CAT [ HEAD det,
                         VAL [ SUBJ < >,
                               SPR < >,
                               COMPS < > ] ],
                   CONT [ HOOK.INDEX #ind,
                          RELS <! #key !> ],
                   KEYS.KEY #key & [ ARG0 #ind ] ] ].
                           
det-nonwh-word := det-word &
  [ SYNSEM.NON-LOCAL non-local-none ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Inflectional affixes
;;

lex-rule-infl := lex-rule &
  [ INFLECTED +,
    SYNSEM #synsem,
    DTR [ INFLECTED -,
          SYNSEM #synsem ] ].

non-fin-verb := local & 
  [ CAT.HEAD.TAM [ TENSE #tense,
                   ASPECT #aspect ],
    CONT.HOOK.INDEX #index & [ E [ TENSE #tense,
                                   ASPECT #aspect ] ],
    KEYS.KEY.ARG0 #index ].

prp-verb := non-fin-verb &
  [ CAT.HEAD [ VFORM prp,
	       TAM.ASPECT progr ] ].

psp-verb := non-fin-verb &
  [ CAT.HEAD.VFORM psp ].

bse-verb := non-fin-verb &
  [ CAT.HEAD [ VFORM bse,
               TAM.ASPECT no-aspect ] ].

fin-verb := local &
  [ CAT.HEAD [ TAM [ TENSE #tense,
                     ASPECT #aspect ],
               VFORM fin ],
    CONT psoa & [ HOOK.INDEX.E [ TENSE #tense,
                                 ASPECT #aspect ] ] ].

pres-verb := fin-verb & 
  [ CAT.HEAD.TAM [ TENSE present,
		   ASPECT no-aspect ] ].

past-verb := fin-verb &
  [ CAT.HEAD.TAM.TENSE past ].

third-sg-fin-verb := pres-verb &
  [ CONT.HOOK.XARG.PNG.PN 3sg ].

non-third-sg-fin-verb := pres-verb &
  [ CONT.HOOK.XARG.PNG.PN non3sg ].

sing-noun := local &
  [ CAT.VAL.SPR < [ LOCAL.AGR.PNG.PN 3sg ] >,
    CONT.HOOK.INDEX.PNG.PN 3sg ]. 

plur-noun := local &
  [ CAT.VAL.SPR < [ LOCAL.AGR.PNG.PN 3pl ] >,
    CONT.HOOK.INDEX.PNG.PN 3pl ].

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Constructions

head-subj-phrase := basic-head-subj-phrase &
  [ HEAD-DTR #hd & [ INFLECTED +],
    NON-HEAD-DTR #nhd & [ INFLECTED +],
    ARGS < #nhd, #hd > ].

head-comp-phrase := basic-head-comp-phrase &
  [ HEAD-DTR #hd & [ INFLECTED +],
    NON-HEAD-DTR #nhd & [ INFLECTED +],
    ARGS < #hd, #nhd > ].

head-spec-phrase := basic-head-spec-phrase &
  [ HEAD-DTR #hd & [ INFLECTED +],
    NON-HEAD-DTR #nhd & [ INFLECTED +],
    ARGS < #nhd, #hd > ].
