;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of clausal-mods-adv-or-head
;;; created at:
;;;     Wed Nov 01 18:42:28 UTC 2017
;;; based on Matrix customization system version of:
;;;     unknown time
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-mod-phrase-simple :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

head :+ [ INIT bool ].

canonical-synsem :+ [ SUBORDINATED xsubord ].

xsubord := *top*.
none := xsubord.
advs := xsubord.
advvp := xsubord.
advvps := xsubord.

basic-head-subj-phrase :+
  [ SYNSEM.SUBORDINATED #subord,
    HEAD-DTR.SYNSEM.SUBORDINATED #subord ].

basic-head-comp-phrase :+
  [ SYNSEM.SUBORDINATED #subord,
    HEAD-DTR.SYNSEM.SUBORDINATED #subord ].

basic-head-opt-comp-phrase :+
  [ SYNSEM.SUBORDINATED #subord,
    HEAD-DTR.SYNSEM.SUBORDINATED #subord ].

basic-head-opt-subj-phrase :+
  [ SYNSEM.SUBORDINATED #subord,
    HEAD-DTR.SYNSEM.SUBORDINATED #subord ].

;basic-head-mod-phrase-simple :+
;  [ HEAD-DTR.SYNSEM.SUBORDINATED #subord,
;    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.MOD < [ SUBORDINATED #subord ] > ].

adj-head-phrase :+
  [ SYNSEM.SUBORDINATED #subord,
    NON-HEAD-DTR.SYNSEM.SUBORDINATED #subord ].


;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL.CAT.VAL [ COMPS < >,
                           SUBJ < >,
                           SPEC < >,
                           SPR < #spr &
                                 [ LOCAL.CAT.HEAD det,
                                   OPT + ] > ] ].

noun-noun-lex := noun-lex.

;;; Verbs

verb-lex := basic-verb-lex & non-mod-lex-item &
  [ SYNSEM [ SUBORDINATED none,
		LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ]],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT.VAL [ SPR < >,
                                     COMPS < > ],
                           CONT.HOOK.INDEX #xarg ] ] ].

intransitive-verb-lex := verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

verb-verb-lex := intransitive-verb-lex.

;;;;;;;;;;;;;;;;;;;
;;; Subordinators
;;;;;;;;;;;;;;;;;;;

scopal-mod-with-comp-lex := single-rel-lex-item & norm-ltop-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL scopal-mod &
                                              [ CAT [ HEAD verb,
                                                      VAL [ SUBJ < >,
                                                            SPR < >,
                                                            COMPS < > ] ],
                                                CONT.HOOK [ LTOP #mod,
                                                            INDEX #index ] ] ] >,
                           VAL.COMPS < [ LOCAL [ CAT [ HEAD verb,
                                                       VAL [ SUBJ < >,
                                                             SPR < >,
                                                             COMPS < > ] ],
                                                 CONT.HOOK.LTOP #comps ] ] > ],
                     CONT [ HCONS <! qeq &
                                     [ HARG #h1,
                                       LARG #mod ], qeq &
                                                    [ HARG #h2,
                                                      LARG #comps ] !>,
                            HOOK.INDEX #index ] ],
             LKEYS.KEYREL [ ARG1 #h1,
                            ARG2 #h2 ] ] ].

subord-lex-item := scopal-mod-with-comp-lex &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < >,
                           SPR < >,
                           COMPS < #comps > ],
    ARG-ST < #comps &
         [ LOCAL.CAT [ HEAD verb,
                       MC - ] ] > ].

clause-init-prehead-subord-lex-item := subord-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD.INIT +,
                       POSTHEAD - ] ].

intersective-mod-subord-lex := no-rels-hcons-lex-item &
  [ SYNSEM [ LOCAL [ CAT [ VAL [ COMPS < >,
				 SPR < >,
				 SUBJ < > ],
			   HEAD.MOD < [ LOCAL intersective-mod &
                                              [ CAT [ HEAD verb ] ] ] > ] ] ]].

s-adv-subord-lex-item := intersective-mod-subord-lex &
  [ SYNSEM [ LOCAL.CAT.HEAD.MOD < [ SUBORDINATED advs,
				    LOCAL.CAT.VAL [ SUBJ < > ]] >,
	     SUBORDINATED advs ]].

clause-init-prehead-s-adv-subord-lex-item := s-adv-subord-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD.INIT +,
                       POSTHEAD - ] ].

vp-adv-subord-lex-item := intersective-mod-subord-lex &
  [ SYNSEM [ LOCAL.CAT.HEAD.MOD < [ SUBORDINATED advvp,
				    LOCAL.CAT.VAL [ SUBJ < [ ] >,
						    COMPS < > ]] >,
	     SUBORDINATED advvp ]].

clause-init-prehead-vp-adv-subord-lex-item := vp-adv-subord-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD.INIT +,
                       POSTHEAD - ] ].


vp-and-s-adv-subord-lex-item := intersective-mod-subord-lex &
  [ SYNSEM [ LOCAL.CAT.HEAD.MOD < [ SUBORDINATED advvps,
				    LOCAL.CAT.VAL [ COMPS < > ]] >,
	     SUBORDINATED advvps ]].

clause-init-prehead-vp-and-s-adv-subord-lex-item := vp-and-s-adv-subord-lex-item &
  [ SYNSEM.LOCAL.CAT [ HEAD.INIT +,
                       POSTHEAD - ] ].
;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Lexical rule types

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-comp-phrase := basic-head-1st-comp-phrase & head-initial &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.INIT + ].

subj-head-phrase := decl-head-subj-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].

comp-head-phrase := basic-head-1st-comp-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.INIT - ].


modifying-clause-phrase := basic-unary-phrase &
  [ SYNSEM [ LOCAL [ CAT [ HEAD [ MOD < [ LOCAL scopal-mod &
						[ CAT [ HEAD verb,
							VAL [ SUBJ < >,
							      SPR < >,
							      COMPS < > ]],
						  CONT.HOOK [ LTOP #mcl,
								INDEX #index ]]] > ]]]],
    C-CONT [ RELS <! arg12-ev-relation &
		   [ ARG1 #mch,
		     ARG2 #sch ] !>,
	     HCONS <! qeq &
		    [ HARG #mch,
		      LARG #mcl ],
		    [ HARG #sch,
		      LARG #scl ] !>,
    		HOOK.INDEX #index ],
    ARGS < [ SYNSEM [ LOCAL [ CAT [ HEAD verb,
				    VAL [ SUBJ < >,
					  SPR < >,
					  COMPS < > ]],
			    CONT.HOOK.LTOP #scl ],  
                      NON-LOCAL [ REL 0-dlist ] ] ] > ].


advs-modifying-clause-phrase := modifying-clause-phrase &
  [ C-CONT.RELS <! [ PRED "advs_x_rel" ] !>, ;this rel should be user defined
    ARGS < [ SYNSEM.SUBORDINATED advs ] > ].

advvp-modifying-clause-phrase := modifying-clause-phrase &
  [ C-CONT.RELS <! [ PRED "advvp_x_rel" ] !>, ;this rel should be user defined
    ARGS < [ SYNSEM.SUBORDINATED advvp ] > ].

advvps-modifying-clause-phrase := modifying-clause-phrase &
  [ C-CONT.RELS <! [ PRED "advvps_x_rel" ] !>, ;this rel should be user defined
    ARGS < [ SYNSEM.SUBORDINATED advvps ] > ]. 

;;;;;;;;;;;;;;;;;;
;;; Coordination
;;;;;;;;;;;;;;;;;;

+nvcdmo :+ [ MOD < > ].
