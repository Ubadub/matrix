;;; -*- Mode: TDL; Package: LKB -*-

;;; Nouns

amico := noun-lex &
   [ STEM < "amico" >,
     SYNSEM.LKEYS.KEYREL.PRED "_friend_n_rel" ].

conforto := noun-lex &
   [ STEM < "conforto" >,
     SYNSEM.LKEYS.KEYREL.PRED "_comfort_n_rel" ].

donna := noun-lex &
   [ STEM < "donna" >,
     SYNSEM.LKEYS.KEYREL.PRED "_woman_n_rel" ].

figlio := noun-lex &
   [ STEM < "figlio" >,
     SYNSEM.LKEYS.KEYREL.PRED "_son_n_rel" ].

giosuè := noun-lex &
   [ STEM < "giosuè" >,
     SYNSEM.LKEYS.KEYREL.PRED "_joshua_n_rel" ].

libro := noun-lex &
   [ STEM < "libro" >,
     SYNSEM.LKEYS.KEYREL.PRED "_book_n_rel" ].

libri := noun-lex &
   [ STEM < "libri" >,
     SYNSEM.LKEYS.KEYREL.PRED "_books_n_rel" ].

maria := noun-lex &
   [ STEM < "maria" >,
     SYNSEM.LKEYS.KEYREL.PRED "_Mary_n_rel" ].

marta := noun-lex &
   [ STEM < "marta" >,
     SYNSEM.LKEYS.KEYREL.PRED "_Marta_n_rel" ].

milano := noun-lex &
   [ STEM < "milano" >,
     SYNSEM.LKEYS.KEYREL.PRED "_Milano_n_rel" ].

persona := noun-lex &
   [ STEM < "persona" >,
     SYNSEM.LKEYS.KEYREL.PRED "_person_n_rel" ].

persone := noun-lex &
   [ STEM < "persone" >,
     SYNSEM.LKEYS.KEYREL.PRED "_people_n_rel" ].

presidente := noun-lex &
   [ STEM < "presidente" >,
     SYNSEM.LKEYS.KEYREL.PRED "_president_n_rel" ].

professore := noun-lex &
   [ STEM < "professore" >,
     SYNSEM.LKEYS.KEYREL.PRED "_professore_n_rel" ].


ragazzo := noun-lex &
   [ STEM < "ragazzo" >,
     SYNSEM.LKEYS.KEYREL.PRED "_boy_n_rel" ].

ragazza := noun-lex &
   [ STEM < "ragazza" >,
     SYNSEM.LKEYS.KEYREL.PRED "_girl_n_rel" ].

ragazzi := noun-lex &
   [ STEM < "ragazzi" >,
     SYNSEM.LKEYS.KEYREL.PRED "_youths_n_rel" ].

ragazze := noun-lex &
   [ STEM < "ragazze" >,
     SYNSEM.LKEYS.KEYREL.PRED "_girls_n_rel" ].

revista := noun-lex &
   [ STEM < "revista" >,
     SYNSEM.LKEYS.KEYREL.PRED "_magazine_n_rel" ].

reviste := noun-lex &
   [ STEM < "reviste" >,
     SYNSEM.LKEYS.KEYREL.PRED "_magazines_n_rel" ].

sole := noun-lex &
   [ STEM < "sole" >,
     SYNSEM.LKEYS.KEYREL.PRED "_sun_n_rel" ].

stadio := noun-lex &
   [ STEM < "stadio" >,
     SYNSEM.LKEYS.KEYREL.PRED "_stadium_n_rel" ].

stadi := noun-lex &
   [ STEM < "stadi" >,
     SYNSEM.LKEYS.KEYREL.PRED "_stadiums_n_rel" ].

studenti := noun-lex &
   [ STEM < "studenti" >,
     SYNSEM.LKEYS.KEYREL.PRED "_students_n_rel" ].

;;; Verbs

dorm-e := intransitive-verb-lex &
   [ STEM < "dorm-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_sleep_v_rel" ].

conosc-e := transitive-verb-lex &
   [ STEM < "conosc-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

aiut-a := transitive-verb-lex &
   [ STEM < "aiut-a" >,
     SYNSEM.LKEYS.KEYREL.PRED "_help_v_rel" ].

am-o := transitive-verb-lex &
   [ STEM < "am-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_love_v_rel" ].

bev-o := intransitive-verb-lex &
   [ STEM < "bev-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_drink_v_rel" ].

brill-a := intransitive-verb-lex &
   [ STEM < "brill-a" >,
     SYNSEM.LKEYS.KEYREL.PRED "_shine_v_rel" ].

cant-a := intransitive-verb-lex &
   [ STEM < "cant-a" >,
     SYNSEM.LKEYS.KEYREL.PRED "_sing_v_rel" ].

compr-a := transitive-verb-lex &
   [ STEM < "compr-a" >,
     SYNSEM.LKEYS.KEYREL.PRED "_buy_v_rel" ].

d-anno := transitive-verb-lex &
   [ STEM < "d-anno" >,
     SYNSEM.LKEYS.KEYREL.PRED "_give_v_rel" ].

dev-e := transitive-verb-lex &
   [ STEM < "dev-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_should_v_rel" ].

dic-o := transitive-verb-lex &
   [ STEM < "dic-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_say_v_rel" ].

domand-o := transitive-verb-lex &
   [ STEM < "domand-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_ask_v_rel" ].

lovor-o := intransitive-verb-lex &
   [ STEM < "lavor-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_work_v_rel" ].

legg-e := transitive-verb-lex &
   [ STEM < "legg-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_read_v_rel" ].

mangi-o := intransitive-verb-lex &
   [ STEM < "mangi-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_eat_v_rel" ].

piac-e := transitive-verb-lex &
   [ STEM < "piac-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_please_v_rel" ].

prend-ono := transitive-verb-lex &
   [ STEM < "prend-ono" >,
     SYNSEM.LKEYS.KEYREL.PRED "_take_v_rel" ].

può := transitive-verb-lex &
   [ STEM < "può" >,
     SYNSEM.LKEYS.KEYREL.PRED "_can_v_rel" ].

studi-a := intransitive-verb-lex &
   [ STEM < "studi-a" >,
     SYNSEM.LKEYS.KEYREL.PRED "_studies_v_rel" ].

sei := transitive-verb-lex &
   [ STEM < "sei" >,
     SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ].

sono := transitive-verb-lex &
   [ STEM < "sono" >,
     SYNSEM.LKEYS.KEYREL.PRED "_be_v_rel" ].

vend-e := transitive-verb-lex &
   [ STEM < "vend-e" >,
     SYNSEM.LKEYS.KEYREL.PRED "_sell_v_rel" ].

voi := transitive-verb-lex &
   [ STEM < "voi" >,
     SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel" ].

vuole := transitive-verb-lex &
   [ STEM < "vuole" >,
     SYNSEM.LKEYS.KEYREL.PRED "_want_v_rel" ].

è := transitive-verb-lex &
   [ STEM < "è" >,
     SYNSEM.LKEYS.KEYREL.PRED "_be_v_rel" ].

;;; Other

;;; Determiners

un := determiner-lex &
   [ STEM < "un" >,
     SYNSEM.LKEYS.KEYREL.PRED "_indef_q_rel" ].

uno := determiner-lex &
   [ STEM < "uno" >,
     SYNSEM.LKEYS.KEYREL.PRED "_indef_q_rel" ].

una := determiner-lex &
   [ STEM < "una" >,
     SYNSEM.LKEYS.KEYREL.PRED "_indef_q_rel" ].

il := determiner-lex &
   [ STEM < "il" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

lo := determiner-lex &
   [ STEM < "lo" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

gli := determiner-lex &
   [ STEM < "gli" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

i := determiner-lex &
   [ STEM < "i" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

la := determiner-lex &
   [ STEM < "la" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

le := determiner-lex &
   [ STEM < "le" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

quest-o := determiner-lex &
   [ STEM < "quest-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

codest-o := determiner-lex &
   [ STEM < "codest-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

quell-o := determiner-lex &
   [ STEM < "quell-o" >,
     SYNSEM.LKEYS.KEYREL.PRED "_def_q_rel" ].

non := neg-adv-lex &
   [ STEM < "non" >, 
     SYNSEM.LKEYS.KEYREL.PRED "_neg_r_rel" ].

e_1 := conj-lex &
  [ STEM < "e" >,
    SYNSEM.LKEYS.KEYREL.PRED "_and_coord_rel",
    CFORM "1" ].
